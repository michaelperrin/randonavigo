---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { type CollectionEntry, getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import { getHikeImage, getHikeImagePath } from '../lib/getHikeImage';
import List from '../components/Hike/List.astro';

const hikes = (await getCollection('hike')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const getHikeImageUrl = (hike: CollectionEntry<'hike'>) => {
  return getHikeImage(getHikeImagePath(hike.data.pubDate, hike.data.slug, hike.data.main_picture));
}
---

<!doctype html>
<html lang="fr">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <section class="container mx-auto">
        <List />
        <!-- <ul>
          {
            hikes.map((hike) => {
              const imageUrl = getHikeImageUrl(hike);
              return (
                <li>
                  <a href={`/hike/${hike.id}/`}>
                    {imageUrl && (
                      <Image width={720} height={360} src={imageUrl} alt="" />
                    )}
                    <h4 class="title">{hike.data.title}</h4>
                    <p class="date">
                      <FormattedDate date={hike.data.pubDate} />
                    </p>
                  </a>
                </li>
            )})
          }
        </ul> -->
      </section>
    </main>
    <Footer />
  </body>
</html>
