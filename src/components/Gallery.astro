---
import { getHikeImage } from "~/lib/getHikeImage";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

export interface Props {
  pictures: string[];
  width?: "" | "sm";
}

const { pictures, width = "" } = Astro.props;

const processedPictures = pictures.map((picture) => {
  const importedImage = getHikeImage(picture);

  if (!importedImage) {
    return null;
  }

  return {
    src: picture,
    importedImage,
    width: importedImage.width,
    height: importedImage.height,
  };
});
---

<div
  class:list={[
    "mx-auto grid gap-2 mb-2 not-prose",
    { "max-w-lg": width === "sm" },
  ]}
  style="grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));"
  data-gallery
>
  {
    processedPictures.map((picture, index) =>
      picture ? (
        <div
          class="aspect-4/3 cursor-zoom-in relative"
          style="position: relative; margin: 1px;"
          data-pswp-item
          data-src={picture?.importedImage?.src}
          data-w={picture.width}
          data-h={picture.height}
        >
          <Image
            src={picture.importedImage}
            alt=""
            loading="lazy"
            width={1200}
            height={800}
            format="webp"
            class="w-full h-full block object-cover"
          />
        </div>
      ) : null
    )
  }
</div>

<script>
  import PhotoSwipe from "photoswipe";
  import "photoswipe/style.css";

  // Initialize PhotoSwipe when the page loads
  document.addEventListener("DOMContentLoaded", () => {
    const galleries = document.querySelectorAll("[data-gallery]");

    galleries.forEach((gallery) => {
      const items = Array.from(
        gallery.querySelectorAll("[data-pswp-item]")
      ).map((item) => ({
        src: item.getAttribute("data-src") || "",
        width: parseInt(item.getAttribute("data-w") || "1200"),
        height: parseInt(item.getAttribute("data-h") || "800"),
      }));

      gallery.addEventListener("click", (e) => {
        const clickedItem = (e.target as HTMLElement).closest(
          "[data-pswp-item]"
        );
        if (!clickedItem) return;

        e.preventDefault();

        const index = Array.from(
          gallery.querySelectorAll("[data-pswp-item]")
        ).indexOf(clickedItem);

        const lightbox = new PhotoSwipe({
          dataSource: items,
          index: index,
          pswpModule: () => import("photoswipe"),
        });

        lightbox.init();
      });
    });
  });
</script>
