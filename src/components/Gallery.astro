---
import { getHikeImage } from "~/lib/getHikeImage";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

export interface Props {
  pictures: (string | ImageMetadata)[];
  width?: "" | "sm";
}

const { pictures, width = "" } = Astro.props;

// Process each picture to get the imported image or fallback to string path
const processedPictures = pictures.map((picture) => {
  if (typeof picture === "string") {
    const importedImage = getHikeImage(picture);
    return {
      src: picture,
      importedImage,
      isImported: !!importedImage,
    };
  } else {
    return {
      src: "",
      importedImage: picture,
      isImported: true,
    };
  }
});
---

<div
  class:list={[
    "mx-auto grid gap-2 mb-2 not-prose",
    { "max-w-lg": width === "sm" },
  ]}
  style="grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));"
  data-gallery
>
  {
    processedPictures.map((picture, index) => (
      <div
        class="aspect-4/3 cursor-zoom-in relative"
        style="position: relative; margin: 1px;"
        data-pswp-item
        data-src={picture.src}
        data-w="800"
        data-h="600"
      >
        {picture.isImported && picture.importedImage ? (
          <Image
            src={picture.importedImage}
            alt=""
            loading="lazy"
            width={800}
            height={600}
            format="webp"
            class="w-full h-full block object-cover"
          />
        ) : (
          <Image
            src={picture.src}
            alt=""
            loading="lazy"
            width={800}
            height={600}
            format="webp"
            class="w-full h-full block object-cover"
          />
        )}
      </div>
    ))
  }
</div>

<script>
  import PhotoSwipe from "photoswipe";
  import "photoswipe/style.css";

  // Initialize PhotoSwipe when the page loads
  document.addEventListener("DOMContentLoaded", () => {
    const galleries = document.querySelectorAll("[data-gallery]");

    galleries.forEach((gallery) => {
      const items = Array.from(
        gallery.querySelectorAll("[data-pswp-item]")
      ).map((item) => ({
        src: item.getAttribute("data-src") || "",
        width: parseInt(item.getAttribute("data-w") || "800"),
        height: parseInt(item.getAttribute("data-h") || "600"),
      }));

      gallery.addEventListener("click", (e) => {
        const clickedItem = (e.target as HTMLElement).closest(
          "[data-pswp-item]"
        );
        if (!clickedItem) return;

        e.preventDefault();

        const index = Array.from(
          gallery.querySelectorAll("[data-pswp-item]")
        ).indexOf(clickedItem);

        const lightbox = new PhotoSwipe({
          dataSource: items,
          index: index,
          pswpModule: () => import("photoswipe"),
        });

        lightbox.init();
      });
    });
  });
</script>
